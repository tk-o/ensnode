/* Starlight CSS File */
@layer base, starlight, theme, components, utilities;

@import "@astrojs/starlight-tailwind";
@import "tailwindcss/theme.css" layer(theme);
@import "tailwindcss/utilities.css" layer(utilities);

@theme {
  /* Reference global design tokens */
  --font-sans: var(--font-primary);
  --font-mono: ui-monospace, "SFMono-Regular", "Consolas", "Liberation Mono", "Menlo", monospace;

  /* Accent colors based on global primary */
  --color-accent-50: #f0f8fb;
  --color-accent-100: var(--color-primary-light);
  --color-accent-200: #9dc3d0;
  --color-accent-300: #6ba5b8;
  --color-accent-400: #3a87a0;
  --color-accent-500: var(--color-primary);
  --color-accent-600: #006699;
  --color-accent-700: #004c77;
  --color-accent-800: #003354;
  --color-accent-900: #1a2f3a;
  --color-accent-950: var(--color-primary-dark);

  /* Gray colors using global neutrals */
  --color-gray-50: #f6f6f6;
  --color-gray-100: var(--color-border-light);
  --color-gray-200: #d4d6d7;
  --color-gray-300: var(--color-border);
  --color-gray-400: #b3b7b9;
  --color-gray-500: #8a9499;
  --color-gray-600: #6a7479;
  --color-gray-700: var(--color-text-primary);
  --color-gray-800: #2a3c43;
  --color-gray-900: #1a2c33;
  --color-gray-950: var(--color-primary-dark);
}

/* Starlight-specific variable overrides using global tokens */
:root {
  /* Map Starlight variables to global design tokens */
  --sl-font: var(--font-primary);
  --sl-color-accent-low: var(--color-primary-light);
  --sl-color-accent: var(--color-primary);
  --sl-color-accent-high: var(--color-primary-dark);
  --sl-color-text-accent: var(--color-primary);
  --sl-color-bg-nav: var(--color-background);
  --sl-color-white: var(--color-surface);
  --sl-color-black: var(--color-background);

  /* Gray scale mapping */
  --sl-color-gray-1: var(--color-primary-dark);
  --sl-color-gray-2: var(--color-text-primary);
  --sl-color-gray-3: var(--color-text-primary);
  --sl-color-gray-4: var(--color-text-primary);
  --sl-color-gray-5: var(--color-border);
  --sl-color-gray-6: var(--color-border-light);
  --sl-color-gray-7: #f6f6f6;

  /* Status colors using global tokens */
  --sl-color-blue: var(--color-blue);
  --sl-color-blue-high: var(--color-blue-dark);
  --sl-color-blue-low: var(--color-blue-light);
  --sl-color-orange: var(--color-orange);
  --sl-color-orange-high: var(--color-orange);
  --sl-color-orange-low: var(--color-orange-light);
  --sl-color-purple: var(--color-purple);
  --sl-color-purple-high: var(--color-purple);
  --sl-color-purple-low: var(--color-purple-light);
  --sl-color-green: var(--color-green);
  --sl-color-green-high: var(--color-green);
  --sl-color-green-low: var(--color-green-light);

  /* Pagination and shadows using global tokens */
  --pagination-arrow-color: var(--color-text-secondary);
  --sl-shadow-md: var(--shadow-md);
  --sl-shadow-sm: var(--shadow-sm);

  --sidebar-item-gap: 4px;
}

/* Starlight-specific component styles */
@media (min-width: 1484px) {
  .page {
    flex-direction: row;
    max-width: var(--max-width-page);
    margin-inline: auto;
  }
  nav.sidebar .sidebar-pane {
    position: sticky;
    height: calc(100vh - var(--sl-nav-height));
  }
  div.main-frame {
    padding-inline-start: initial;
    flex: 1;
  }
}

.social-icons::after {
  display: none;
}

.sl-link-card {
  border-color: var(--sl-color-gray-4);
  box-shadow: var(--sl-shadow-sm);
}

.sl-link-card:hover,
a[rel="next"]:hover,
a[rel="prev"]:hover {
  background: var(--sl-color-black);
  border-color: var(--sl-color-accent);
}

.sl-link-card:hover .icon {
  color: var(--sl-color-accent);
}

.link-title {
  color: var(--sl-color-accent);
}

.content-panel + .content-panel {
  border-top: 0;
  padding-top: 0;
}

/* Typography styles */
.sl-markdown-content h1,
.sl-markdown-content h2,
.sl-markdown-content h3,
.sl-markdown-content h4,
.sl-markdown-content h5,
.sl-markdown-content h6 {
  color: var(--sl-color-accent-high);
}

.sl-markdown-content a:hover:not(:where(.not-content *)) > span {
  color: var(--sl-color-accent);
}

.sl-markdown-content :is(h1, h2, h3, h4, h5, h6) > a {
  color: var(--sl-color-white);
  display: inline;
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

.sl-markdown-content :global(.anchor-link) {
  display: inline;
}

.sl-markdown-content ul {
  list-style: disc;
  color: var(--sl-color-text);
}

.sl-markdown-content ol {
  list-style: decimal;
  color: var(--sl-color-text);
}

.sl-markdown-content ol li::marker,
.sl-markdown-content ul li::marker {
  color: var(--sl-color-accent);
}

/* Nested ul inside ol li should have small top margin */
.sl-markdown-content ol li ul {
  margin-top: 0.25rem;
}

/* Pagination styles */
.pagination-links {
  display: flex !important;
  justify-content: space-between;
  margin-top: 3rem;

  & > a {
    flex-basis: unset;
    flex-grow: unset;
    width: fit-content;
    padding: unset;
    border: unset;
    box-shadow: unset;

    &[rel="prev"] {
      text-align: right;
      margin-right: auto;
    }

    &[rel="next"] {
      text-align: left;
      margin-left: auto;
    }

    & > span {
      font-size: 0.75rem;

      .link-title {
        font-size: 1rem;
      }
    }

    & > svg {
      align-self: self-end;
      color: var(--pagination-arrow-color);
      font-size: 1.25rem;
      margin-bottom: 1px;
    }
  }

  & > a:hover > svg {
    color: var(--sl-color-white);
  }
}

.open-in-ensadmin {
  @media screen and (max-width: 400px) {
    font-size: 14px;
  }
}

/* Styling for the list items to prepare for lines */
#starlight__sidebar > div > ul > li {
  position: relative; /* For absolute positioning of ::before */
}

/* Add padding-left only to items that will get a line, to make space for it */
#starlight__sidebar > div > ul > li:not(:first-child) {
  padding-left: 20px; /* Space for the line and content */
}

/* Add margin-bottom for the gap to all LIs except the very last one in the UL */
#starlight__sidebar > div > ul > li:not(:last-child) {
  margin-bottom: var(--sidebar-item-gap);
}

/* Vertical line segment for relevant list items */
#starlight__sidebar > div > ul > li:not(:first-child)::before {
  content: "";
  position: absolute;
  left: 8px; /* X-position of the vertical line */
  top: 0;
  width: 1px; /* Thickness of the vertical line */
  background-color: var(--sl-color-hairline-light); /* Line color */
  height: 100%; /* Default height, covers the item itself */
}

#starlight__sidebar > div > ul > li:not(:first-child):not(:last-child)::before {
  height: calc(100% + var(--sidebar-item-gap));
}

/* Custom icon logic for specific sidebar items based on URL - hack as only
 * icons are supported in starlight. */

/* Styles to replace the default Starlight sidebar icon with a custom image */
.starlight-sidebar-topics-icon svg {
  display: none; /* Hide the default SVG icon */
}

/* Default sidebar icon (parent) */
.starlight-sidebar-topics-icon {
  background-image: url("../assets/ensnode.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 16px;
  height: 16px;
  display: inline-block;
}

/* URL based custom icons */
a[href*="ensindexer"] .starlight-sidebar-topics-icon {
  background-image: url("../assets/ensindexer.svg");
}

a[href*="ensrainbow"] .starlight-sidebar-topics-icon {
  background-image: url("../assets/ensrainbow.svg");
}

a[href*="ensadmin"] .starlight-sidebar-topics-icon {
  background-image: url("../assets/ensadmin.svg");
}

/* Enhance hover and selected states for sidebar items */
#starlight__sidebar a {
  transition: transform 0.2s ease-in-out, background-color 0.2s ease-in-out;
}

/* Only apply hover effects to non-selected items */
#starlight__sidebar a:not([aria-current="page"]):hover {
  background-color: rgba(128, 128, 128, 0.1);
  transform: translateX(2px);
  border-radius: 6px;
}

a.starlight-sidebar-topics-current {
  background-color: rgb(0, 128, 188) !important;
  color: white !important;
  border-radius: 6px;
}

a.starlight-sidebar-topics-current .starlight-sidebar-topics-icon {
  transform: scale(1.1);
  filter: brightness(1.2) contrast(1.1);
  box-shadow: 0 0 8px rgba(65, 130, 184, 0.3);
  border-radius: 4px;
  transition: transform 0.2s ease-in-out, filter 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
